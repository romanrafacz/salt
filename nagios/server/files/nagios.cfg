{% set server = salt['pillar.get']('nagios:server', {}) -%}
{% from "nagios/map.jinja" import nagios with context -%}

# DO NOT EDIT
#
# This file is managed by salt.
# Modify the config that generates this file instead
#

log_file={{ nagios.log }}
{% for cfg_file in server.get('cfg_file', []) -%}
cfg_file={{ cfg_file }}
{% endfor -%}
{% for cfg_dir in server.get('cfg_dir', []) -%}
cfg_dir={{ cfg_dir }}
{% endfor -%}
object_cache_file={{ nagios.object_cache }}
precached_object_file={{ nagios.precached_object_file }}
resource_file={{ nagios.resource_file }}
status_file={{ nagios.status_file }}
status_update_interval={{ server.get('status_update_interval', 10) }}
nagios_user=nagios
nagios_group=nagios
check_external_commands={{ server.get('check_external_commands', 0) }}
command_check_interval={{ server.get('command_check_interval', '-1') }}
command_file={{ nagios.command_file }}
external_command_buffer_slots={{ server.get('external_command_buffer_slots', 4096) }}
lock_file={{ nagios.lock_file }}
temp_file={{ nagios.temp_file }}
temp_path=/tmp
event_broker_options={{ server.get('event_broker_options', '-1') }}
log_rotation_method={{ server.get('log_rotation_method', 'd') }}
log_archive_path={{ nagios.log_archive_path }}
use_syslog={{ server.get('use_syslog', 1) }}
log_notifications={{ server.get('log_notifications', 1) }}
log_service_retries={{ server.get('log_service_retries', 1) }}
log_host_retries={{ server.get('log_host_retries', 1) }}
log_event_handlers={{ server.get('log_event_handlers', 1) }}
log_initial_states={{ server.get('log_initial_states', 0) }}
log_external_commands={{ server.get('log_external_commands', 0) }}
log_passive_checks={{ server.get('log_passive_checks', 1) }}
service_inter_check_delay_method={{ server.get('service_inter_check_delay_method', 's')}}
max_service_check_spread={{ server.get('max_service_check_spread', 30) }}
service_interleave_factor={{ server.get('service_interleave_factor', 's') }}
host_inter_check_delay_method={{ server.get('host_inter_check_delay_method', 's') }}
max_host_check_spread={{ server.get('max_host_check_spread', 30) }}
max_concurrent_checks={{ server.get('max_concurrent_checks', 0) }}
check_result_reaper_frequency={{ server.get('check_result_reaper_frequency', 10) }}
max_check_result_reaper_time={{ server.get('max_check_result_reaper_time', 30) }}
check_result_path={{ nagios.check_result_path }}
max_check_result_file_age={{ server.get('max_check_result_file_age', 3600) }}
cached_host_check_horizon={{ server.get('cached_host_check_horizon', 15) }}
cached_service_check_horizon={{ server.get('cached_service_check_horizon', 15) }}
enable_predictive_host_dependency_checks={{ server.get('enable_predictive_host_dependency_checks', 1) }}
enable_predictive_service_dependency_checks={{ server.get('enable_predictive_service_dependency_checks', 1) }}
soft_state_dependencies={{ server.get('soft_state_dependencies', 0) }}
auto_reschedule_checks={{ server.get('auto_reschedule_checks', 0) }}
auto_rescheduling_interval={{ server.get('auto_rescheduling_interval', 30) }}
auto_rescheduling_window={{ server.get('auto_rescheduling_window', 180) }}
sleep_time={{ server.get('sleep_time', 0.25) }}
service_check_timeout={{ server.get('service_check_timeout', 60) }}
host_check_timeout={{ server.get('host_check_timeout', 30) }}
event_handler_timeout={{ server.get('event_handler_timeout', 30) }}
notification_timeout={{ server.get('notification_timeout', 30) }}
ocsp_timeout={{ server.get('ocsp_timeout', 5) }}
perfdata_timeout={{ server.get('perfdata_timeout', 5) }}
retain_state_information={{ server.get('retain_state_information', 1) }}
state_retention_file={{ nagios.state_retention_file }}
retention_update_interval={{ server.get('retention_update_interval', 60) }}
use_retained_program_state={{ server.get('use_retained_program_state', 1) }}
use_retained_scheduling_info={{ server.get('use_retained_scheduling_info', 1) }}
retained_host_attribute_mask={{ server.get('retained_host_attribute_mask', 0) }}
retained_service_attribute_mask={{ server.get('retained_service_attribute_mask', 0) }}
retained_process_host_attribute_mask={{ server.get('retained_process_host_attribute_mask', 0) }}
retained_process_service_attribute_mask={{ server.get('retained_process_service_attribute_mask', 0) }}
retained_contact_host_attribute_mask={{ server.get('retained_contact_host_attribute_mask', 0) }}
retained_contact_service_attribute_mask={{ server.get('retained_contact_service_attribute_mask', 0) }}
interval_length={{ server.get('interval_length', 60) }}
check_for_updates={{ server.get('check_for_updates', 1) }}
bare_update_check={{ server.get('bare_update_check', 0) }}
use_aggressive_host_checking={{ server.get('use_aggressive_host_checking', 0) }}
execute_service_checks={{ server.get('execute_service_checks', 1) }}
accept_passive_service_checks={{ server.get('accept_passive_service_checks', 1) }}
execute_host_checks={{ server.get('execute_host_checks', 1) }}
accept_passive_host_checks={{ server.get('accept_passive_host_checks', 1) }}
enable_notifications={{ server.get('enable_notifications', 1) }}
enable_event_handlers={{ server.get('enable_event_handlers', 1) }}
process_performance_data={{ server.get('process_performance_data', 0) }}
obsess_over_services={{ server.get('obsess_over_services', 0) }}
obsess_over_hosts={{ server.get('obsess_over_hosts', 0) }}
translate_passive_host_checks={{ server.get('translate_passive_host_checks', 0) }}
passive_host_checks_are_soft={{ server.get('passive_host_checks_are_soft', 0) }}
check_for_orphaned_services={{ server.get('check_for_orphaned_services', 1) }}
check_for_orphaned_hosts={{ server.get('check_for_orphaned_hosts', 1) }}
check_service_freshness={{ server.get('check_service_freshness', 1) }}
service_freshness_check_interval={{ server.get('service_freshness_check_interval', 60) }}
service_check_timeout_state={{ server.get('service_check_timeout_state', 'c') }}
check_host_freshness={{ server.get('check_host_freshness', 0) }}
host_freshness_check_interval={{ server.get('host_freshness_check_interval', 60) }}
additional_freshness_latency={{ server.get('additional_freshness_latency', 15) }}
enable_flap_detection={{ server.get('enable_flap_detection', 1) }}
low_service_flap_threshold={{ server.get('low_service_flap_threshold', 5.0) }}
high_service_flap_threshold={{ server.get('high_service_flap_threshold', 20.0) }}
low_host_flap_threshold={{ server.get('low_host_flap_threshold', 5.0) }}
high_host_flap_threshold={{ server.get('high_host_flap_threshold', 20.0) }}
date_format={{ server.get('date_format', 'iso8601') }}
p1_file={{ nagios.p1_file }}
enable_embedded_perl={{ server.get('enable_embedded_perl', 1) }}
use_embedded_perl_implicitly={{ server.get('use_embedded_perl_implicitly', 1) }}
illegal_object_name_chars={{ server.get('illegal_object_name_chars', '`~!$%^&*|\'"<>?,()=' ) }}
illegal_macro_output_chars={{ server.get('illegal_macro_output_chars', '`~$&|\'"<>') }}
use_regexp_matching={{ server.get('use_regexp_matching', 0) }}
use_true_regexp_matching={{ server.get('use_true_regexp_matching', 0) }}
admin_email={{ server.get('admin_email', 'root@localhost') }}
admin_pager={{ server.get('admin_pager', 'pageroot@localhost') }}
daemon_dumps_core={{ server.get('daemon_dumps_core', 0) }}
use_large_installation_tweaks={{ server.get('use_large_installation_tweaks', 0) }}
enable_environment_macros={{ server.get('enable_environment_macros', 1) }}
debug_level={{ server.get('debug_level', 0) }}
debug_verbosity={{ server.get('debug_verbosity', 1) }}
debug_file={{ nagios.debug_file }}
max_debug_file_size={{ server.get('max_debug_file_size', 1000000) }}
